package edu.eci.cosw.spademo.model;
// Generated 10-abr-2016 9:50:56 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Zones generated by hbm2java
 */
@Entity
@Table(name = "zones")
public class Zone implements java.io.Serializable {

    private ZoneId id;
//    private Store stores;
    private String nameZone;
    private Store storeses;
    private Set<Product> productses = new HashSet<>();

    public Zone() {
    }

    public Zone(ZoneId id, String nameZone) {
        this.id = id;
    
        this.nameZone = nameZone;
    }
    
    public Zone(ZoneId id, String nameZone, Store storeses, Set<Product> productses) {
        this.id = id;
        this.nameZone = nameZone;
        this.storeses = storeses;
        this.productses = productses;
    }
    

    @EmbeddedId
    public ZoneId getId() {
        return this.id;
    }

    public void setId(ZoneId id) {
        this.id = id;
    }


    @Column(name = "name_zone", nullable = false, length = 25)
    public String getNameZone() {
        return this.nameZone;
    }

    public void setNameZone(String nameZone) {
        this.nameZone = nameZone;
    }
    
    @ManyToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @Fetch(FetchMode.JOIN)
    @JsonIgnore
    @JoinColumns({
        @JoinColumn(name = "stores_id_stores", insertable=false, updatable=false),
        @JoinColumn(name = "stores_supermarkets_id_supermarkets", insertable=false, updatable=false)
    })
    public Store getStoreses() {
        return this.storeses;
    }
    
    public void setStoreses(Store storeses) {
        this.storeses = storeses;
    }
    

    @ManyToMany(cascade = CascadeType.ALL, mappedBy = "zoneses")    
    @Fetch(FetchMode.JOIN)
    @JsonIgnore
    public Set<Product> getProductses() {
        return this.productses;
    }

    public void setProductses(Set<Product> productses) {
        this.productses = productses;
    }

}
