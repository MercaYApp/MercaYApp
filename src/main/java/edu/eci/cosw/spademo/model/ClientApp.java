package edu.eci.cosw.spademo.model;
// Generated 10-abr-2016 9:50:56 by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * ClientsApp generated by hbm2java
 */
@Entity
@Table(name="clients_app")
public class ClientApp  implements java.io.Serializable {


     private int idClients;
     private Rol roles;
     private String nameClientApp;
     private String email;
     private String password;
     private Set<Supermarket> supermarketses = new HashSet<>();
     private Set<Invoice> invoiceses = new HashSet<>();

    public ClientApp() {
    }

	
    public ClientApp(int idClients, Rol roles, String nameClientApp, String email, String password) {
        this.idClients = idClients;
        this.roles = roles;
        this.nameClientApp = nameClientApp;
        this.email = email;
        this.password = password;
    }
    public ClientApp(int idClients, Rol roles, String nameClientApp, String email, String password, Set<Supermarket> supermarketses, Set<Invoice> invoiceses) {
       this.idClients = idClients;
       this.roles = roles;
       this.nameClientApp = nameClientApp;
       this.email = email;
       this.password = password;
       this.supermarketses = supermarketses;
       this.invoiceses = invoiceses;
    }
   
    @Id 
    @Column(name="id_clients", unique=true, nullable=false)
    public int getIdClients() {
        return this.idClients;
    }
    
    public void setIdClients(int idClients) {
        this.idClients = idClients;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @Fetch(FetchMode.JOIN)
    @JoinColumn(name="roles_id")
    public Rol getRoles() {
        return this.roles;
    }
    
    public void setRoles(Rol roles) {
        this.roles = roles;
    }

    
    @Column(name="name_client_app", length=25)
    public String getNameClientApp() {
        return this.nameClientApp;
    }
    
    public void setNameClientApp(String nameClientApp) {
        this.nameClientApp = nameClientApp;
    }

    
    @Column(name="email", nullable = false, length=32)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="password", nullable = false, length=25)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    @ManyToMany(mappedBy = "clientsApps")
    @Fetch(FetchMode.JOIN)
    public Set<Supermarket> getSupermarketses() {
        return this.supermarketses;
    }
    
    public void setSupermarketses(Set<Supermarket> supermarketses) {
        this.supermarketses = supermarketses;
    }

    
    @OneToMany(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENTS_APP_id")
    public Set<Invoice> getInvoiceses() {
        return this.invoiceses;
    }
    
    public void setInvoiceses(Set<Invoice> invoiceses) {
        this.invoiceses = invoiceses;
    }




}


